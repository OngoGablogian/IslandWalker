--- engine/abilities/ability_utils.asm
+++ engine/abilities/ability_utils.asm
@@ -177,50 +177,51 @@ Ability_DoubleStat:
 
 ; Applies status-driven stat changes and ability-based modifiers. These were
 ; previously part of the battle core and are now kept with other ability
 ; utilities so battle/core has more room for future abilities.
 ApplyStatusEffectOnPlayerStats:
 	ld a, 1
 	jr ApplyStatusEffectOnStats
 
 ApplyStatusEffectOnEnemyStats:
 	xor a
 
 ApplyStatusEffectOnStats:
         ldh [hBattleTurn], a
         call ApplyPrzEffectOnSpeed
         call ApplyBrnEffectOnAttack
         call ApplyGutsEffectOnAttack
         call ApplyToxicBoostEffectOnAttack
         call ApplyHugePowerEffectOnAttack
         call ApplyHustleEffectOnAttack
         call ApplyMarvelScaleEffectOnDefense
         call ApplyFurCoatEffectOnDefense
         call ApplyChlorophyllEffectOnSpeed
         call ApplySwiftSwimEffectOnSpeed
         call ApplySandRushEffectOnSpeed
         call ApplySlushRushEffectOnSpeed
+        call ApplySurgeSurferEffectOnSpeed
         call ApplyQuickFeetEffectOnSpeed
         jp ApplyFlareBoostEffectOnSpAttack
 
 ApplyPrzEffectOnSpeed:
 	ldh a, [hBattleTurn]
 	and a
 	jr z, .enemy
 	ld a, [wBattleMonStatus]
 	and 1 << PAR
 	ret z
 	ld a, [wBattleMonSpecies]
 	ld c, a
 	ld hl, wBattleMonPersonality
 	ld b, 0
 	call GetAbility
 	xcall Ability_LoadTracedAbility
 	cp QUICK_FEET
 	ret z
 	ld hl, wBattleMonSpeed + 1
 	ld a, [hld]
 	ld b, a
 	ld a, [hl]
 	srl a
 	rr b
 	srl a
@@ -544,50 +545,79 @@ ApplySandRushEffectOnSpeed:
         ret nz
         xcall Ability_GetBattleWeather
         cp WEATHER_SANDSTORM
         ret nz
         ld hl, wEnemyMonSpeed
         ld de, wBattleMonSpeed
         xcall Ability_SelectBattleMonStatPointer
         xcall Ability_DoubleStat
         ret
 
 ApplySlushRushEffectOnSpeed:
         xcall Ability_LoadBattleMonBase
         call GetAbility
         xcall Ability_LoadTracedAbility
         cp SLUSH_RUSH
         ret nz
         xcall Ability_GetBattleWeather
         cp WEATHER_HAIL
         ret nz
         ld hl, wEnemyMonSpeed
         ld de, wBattleMonSpeed
         xcall Ability_SelectBattleMonStatPointer
         xcall Ability_DoubleStat
         ret
 
+ApplySurgeSurferEffectOnSpeed:
+        xcall Ability_LoadBattleMonBase
+        call GetAbility
+        xcall Ability_LoadTracedAbility
+        cp SURGE_SURFER
+        ret nz
+        push bc
+        xcall Ability_GetBattleTerrain
+        pop bc
+        cp TERRAIN_ELECTRIC
+        ret nz
+        ld a, b
+        and a
+        jr nz, .enemy
+        farcall Terrain_CheckPlayerGrounded
+        jr .check_grounded
+
+.enemy
+        farcall Terrain_CheckEnemyGrounded
+
+.check_grounded
+        and a
+        ret z
+        ld hl, wEnemyMonSpeed
+        ld de, wBattleMonSpeed
+        xcall Ability_SelectBattleMonStatPointer
+        xcall Ability_DoubleStat
+        ret
+
 ApplyQuickFeetEffectOnSpeed:
         xcall Ability_LoadBattleMonBase
         ld a, [de]
         and a
         ret z
 	bit FRZ, a
 	ret nz
 	call GetAbility
 	xcall Ability_LoadTracedAbility
 	cp QUICK_FEET
 	ret nz
 	ld hl, wEnemyMonSpeed
 	ld de, wBattleMonSpeed
 	xcall Ability_SelectBattleMonStatPointer
 	xcall Ability_BoostStatByHalf
 	ret
 
 ApplyFlareBoostEffectOnSpAttack:
 	xcall Ability_LoadBattleMonBase
 	call GetAbility
 	xcall Ability_LoadTracedAbility
 	cp FLARE_BOOST
 	ret nz
 	ld a, [de]
 	and 1 << BRN
@@ -713,25 +743,165 @@ Ability_CheckCloudNine:
 	ld b, 1
 	call GetAbility
 	call Ability_LoadTracedAbility
 	cp CLOUD_NINE
 	jr z, .cloud_nine
 
 .no_cloud_nine
 	pop hl
 	pop de
 	pop bc
 	ld a, 1
 	and a
 	ret
 
 .cloud_nine
 	pop hl
 	pop de
 	pop bc
 	xor a
 	ret
 
 Ability_RecalculateStatsForWeather::
         farcall CalcPlayerStats
         farcall CalcEnemyStats
         ret
+
+Ability_GetBattleTerrain::
+        ld a, [wBattleTerrain]
+        ret
+
+Ability_RecalculateStatsForTerrain::
+        call Ability_UpdateMimicry
+        farcall CalcPlayerStats
+        farcall CalcEnemyStats
+        ret
+
+Ability_UpdateMimicry:
+        push bc
+        push de
+        push hl
+        call .UpdatePlayer
+        call .UpdateEnemy
+        pop hl
+        pop de
+        pop bc
+        ret
+
+.UpdatePlayer
+        ld a, [wBattleMonSpecies]
+        and a
+        ret z
+        ld c, a
+        ld hl, wBattleMonPersonality
+        ld b, 0
+        call GetAbility
+        xcall Ability_LoadTracedAbility
+        cp MIMICRY
+        jr z, .player_mimicry
+        ld a, [wBattleMonMimicryActive]
+        and a
+        ret z
+        call .ResetPlayerTypes
+        ret
+
+.player_mimicry
+        push bc
+        xcall Ability_GetBattleTerrain
+        pop bc
+        ld d, a
+        cp TERRAIN_NONE
+        jr nz, .player_apply
+        ld a, [wBattleMonMimicryActive]
+        and a
+        ret z
+        call .ResetPlayerTypes
+        ret
+
+.player_apply
+        call .TerrainToType
+        ld [wBattleMonType1], a
+        ld [wBattleMonType2], a
+        ld a, 1
+        ld [wBattleMonMimicryActive], a
+        ret
+
+.ResetPlayerTypes
+        ld a, [wBattleMonOriginalType1]
+        ld [wBattleMonType1], a
+        ld a, [wBattleMonOriginalType2]
+        ld [wBattleMonType2], a
+        xor a
+        ld [wBattleMonMimicryActive], a
+        ret
+
+.UpdateEnemy
+        ld a, [wEnemyMonSpecies]
+        and a
+        ret z
+        ld c, a
+        ld hl, wEnemyMonPersonality
+        ld b, 1
+        call GetAbility
+        xcall Ability_LoadTracedAbility
+        cp MIMICRY
+        jr z, .enemy_mimicry
+        ld a, [wEnemyMonMimicryActive]
+        and a
+        ret z
+        call .ResetEnemyTypes
+        ret
+
+.enemy_mimicry
+        push bc
+        xcall Ability_GetBattleTerrain
+        pop bc
+        ld d, a
+        cp TERRAIN_NONE
+        jr nz, .enemy_apply
+        ld a, [wEnemyMonMimicryActive]
+        and a
+        ret z
+        call .ResetEnemyTypes
+        ret
+
+.enemy_apply
+        call .TerrainToType
+        ld [wEnemyMonType1], a
+        ld [wEnemyMonType2], a
+        ld a, 1
+        ld [wEnemyMonMimicryActive], a
+        ret
+
+.ResetEnemyTypes
+        ld a, [wEnemyMonOriginalType1]
+        ld [wEnemyMonType1], a
+        ld a, [wEnemyMonOriginalType2]
+        ld [wEnemyMonType2], a
+        xor a
+        ld [wEnemyMonMimicryActive], a
+        ret
+
+.TerrainToType
+        ld a, d
+        cp TERRAIN_GRASSY
+        jr nz, .check_misty
+        ld a, GRASS
+        ret
+
+.check_misty
+        cp TERRAIN_MISTY
+        jr nz, .check_electric
+        ld a, FAIRY
+        ret
+
+.check_electric
+        cp TERRAIN_ELECTRIC
+        jr nz, .check_psychic
+        ld a, ELECTRIC
+        ret
+
+.check_psychic
+        cp TERRAIN_PSYCHIC
+        ret nz
+        ld a, PSYCHIC_TYPE
+        ret
