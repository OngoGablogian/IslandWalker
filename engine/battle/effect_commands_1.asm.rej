--- engine/battle/effect_commands_1.asm
+++ engine/battle/effect_commands_1.asm
@@ -1456,63 +1456,69 @@ BattleCommand_Stab:
 	ld c, [hl]
 	ld hl, wEnemyMonType1
 	ld a, [hli]
 	ld d, a
 	ld e, [hl]
 
 	ldh a, [hBattleTurn]
 	and a
 	jr z, .go ; Who Attacks and who Defends
 
 	ld hl, wEnemyMonType1
 	ld a, [hli]
 	ld b, a
 	ld c, [hl]
 	ld hl, wBattleMonType1
 	ld a, [hli]
 	ld d, a
 	ld e, [hl]
 
 .go
 	ld a, BATTLE_VARS_MOVE_TYPE
 	call GetBattleVarAddr
 	and TYPE_MASK
 	ld [wCurType], a
 
-	push hl
-	push de
-	push bc
-	farcall DoWeatherModifiers
-	pop bc
-	pop de
-	pop hl
+        push hl
+        push de
+        push bc
+        farcall DoWeatherModifiers
+        pop bc
+        pop de
+        pop hl
 
-	push de
-	push bc
-	farcall DoBadgeTypeBoosts
-	pop bc
-	pop de
+        push de
+        push bc
+        farcall DoTerrainModifiers
+        pop bc
+        pop de
+
+        push de
+        push bc
+        farcall DoBadgeTypeBoosts
+        pop bc
+        pop de
 
 	push de
 	push bc
 	ldh a, [hBattleTurn]
 	ld b, a
 	and a
 	jr nz, .EnemyPinchAbility
 	ld hl, wBattleMonPersonality
 	ld a, [wBattleMonSpecies]
 	ld c, a
 	jr .CallAbilityBoosts
 .EnemyPinchAbility
 	ld hl, wEnemyMonPersonality
 	ld a, [wEnemyMonSpecies]
 	ld c, a
 .CallAbilityBoosts
 	push hl
 	push bc
 	farcall ApplyPinchAbilityBoost
 	pop bc
 	pop hl
         push hl
         push bc
         farcall ApplyFlashFireBoost
         pop bc
@@ -2048,55 +2054,58 @@ BattleCommand_DamageVariation:
 	ldh [hDivisor], a
 	ld b, $4
 	call Divide
 
 ; ...to get .85-1.00x damage.
 	ldh a, [hQuotient + 2]
 	ld hl, wCurDamage
 	ld [hli], a
 	ldh a, [hQuotient + 3]
 	ld [hl], a
 	ret
 
 BattleCommand_CheckHit:
 	call .DreamEater
 	jr z, .Miss
 
 	call CheckProtectedOpponent
 	jr nz, .Miss
 
 	call .DrainSub
 	jr z, .Miss
 
 	call .LockOn
 	ret nz
 
-	call .FlyDigMoves
-	jr nz, .Miss
+        call .FlyDigMoves
+        jr nz, .Miss
 
-	farcall Ability_GetBattleWeather
-	ld d, a
+        farcall Terrain_TryBlockPriorityMove
+        jr z, .Miss
+
+        farcall Ability_GetBattleWeather
+        ld d, a
 
 	ld a, BATTLE_VARS_MOVE_EFFECT
 	call GetBattleVar
 	ld e, a
 
 	cp EFFECT_THUNDER
 	jr nz, .CheckBlizzard
 	ld a, d
 	cp WEATHER_RAIN
 	ret z
 
 .CheckBlizzard
 	ld a, e
 	cp EFFECT_BLIZZARD
 	jr nz, .AfterWeather
 	ld a, d
 	cp WEATHER_HAIL
 	ret z
 
 .AfterWeather
 
 	call .XAccuracy
 	ret nz
 
 	; Perfect-accuracy moves
@@ -2973,70 +2982,78 @@ BattleCommand_ApplyDamage:
 	ldh a, [hBattleTurn]
 	and a
 	jr nz, .got_damage_taken
 	ld de, wEnemyDamageTaken + 1
 
 .got_damage_taken
 	ld a, [wCurDamage + 1]
 	ld b, a
 	ld a, [de]
 	add b
 	ld [de], a
 	dec de
 	ld a, [wCurDamage]
 	ld b, a
 	ld a, [de]
 	adc b
 	ld [de], a
 	ret nc
 	ld a, $ff
 	ld [de], a
 	inc de
 	ld [de], a
 	ret
 
 GetFailureResultText:
-	ld de, ProtectingItselfText
+        ld de, ProtectingItselfText
 
-	ld hl, DoesntAffectText
-	ld a, [wTypeModifier]
-	and EFFECTIVENESS_MASK
-	jr z, .got_text
-	ld a, BATTLE_VARS_MOVE_EFFECT
+        ld a, [wFailedMessage]
+        cp FAILED_MESSAGE_PSYCHIC_TERRAIN
+        jr nz, .check_effectiveness
+        ld hl, BattleText_PsychicTerrainBlocked
+        jr .print_text
+
+.check_effectiveness
+        ld hl, DoesntAffectText
+        ld a, [wTypeModifier]
+        and EFFECTIVENESS_MASK
+        jr z, .got_text
+        ld a, BATTLE_VARS_MOVE_EFFECT
 	call GetBattleVar
 	cp EFFECT_FUTURE_SIGHT
 	ld hl, ButItFailedText
 	jr z, .got_text
 	ld hl, AttackMissedText
 	ld a, [wCriticalHit]
 	cp -1
 	jr nz, .got_text
-	ld hl, UnaffectedText
+        ld hl, UnaffectedText
 .got_text
-	call FailText_CheckOpponentProtect
-	xor a
-	ld [wCriticalHit], a
+.print_text
+        call FailText_CheckOpponentProtect
+        xor a
+        ld [wCriticalHit], a
 
 	ld a, BATTLE_VARS_MOVE_EFFECT
 	call GetBattleVar
 	cp EFFECT_JUMP_KICK
 	ret nz
 
 	ld a, [wTypeModifier]
 	and EFFECTIVENESS_MASK
 	ret z
 
 	ld hl, wCurDamage
 	ld a, [hli]
 	ld b, [hl]
 rept 3
 	srl a
 	rr b
 endr
 	ld [hl], b ; no-optimize *hl++|*hl-- = b|c|d|e (a is used)
 	dec hl
 	ld [hli], a
 	or b
 	jr nz, .do_at_least_1_damage
 	inc a
 	ld [hl], a
 .do_at_least_1_damage
@@ -3076,61 +3093,50 @@ BattleCommand_CriticalText:
 	ld a, [wCriticalHit]
 	and a
 	jr z, .wait
 
 	dec a
 	add a
 	ld hl, .texts
 	ld b, 0
 	ld c, a
 	add hl, bc
 	ld a, [hli]
 	ld h, [hl]
 	ld l, a
 	call StdBattleTextbox
 
 	xor a
 	ld [wCriticalHit], a
 
 .wait
 	jmp Wait20Frames
 
 .texts
 	dw CriticalHitText
 	dw OneHitKOText
 
-BattleCommand_StartLoop:
-	ld hl, wPlayerRolloutCount
-	ldh a, [hBattleTurn]
-	and a
-	jr z, .ok
-	ld hl, wEnemyRolloutCount
-.ok
-	xor a
-	ld [hl], a
-	ret
-
 BattleCommand_SuperEffectiveLoopText:
 	ld a, BATTLE_VARS_SUBSTATUS3
 	call GetBattleVarAddr
 	bit SUBSTATUS_IN_LOOP, a
 	ret nz
 
 	; fallthrough
 
 BattleCommand_SuperEffectiveText:
 	ld a, [wTypeModifier]
 	and EFFECTIVENESS_MASK
 	cp EFFECTIVE
 	ret z
 	ld hl, SuperEffectiveText
 	jr nc, .print
 	ld hl, NotVeryEffectiveText
 .print
 	jmp StdBattleTextbox
 
 BattleCommand_CheckFaint:
 ; Faint the opponent if its HP reached zero
 ;  and faint the user along with it if it used Destiny Bond.
 ; Ends the move effect if the opponent faints.
 
 	ld hl, wEnemyMonHP
@@ -4359,68 +4365,84 @@ UpdateMoveData:
 
 	call GetMoveData
 	call GetMoveName
 	jmp CopyName1
 
 BattleCommand_SleepTarget:
 	call GetOpponentItem
 	ld a, b
 	cp HELD_PREVENT_SLEEP
 	jr nz, .not_protected_by_item
 
 	ld a, [hl]
 	ld [wNamedObjectIndex], a
 	call GetItemName
 	ld hl, ProtectedByText
 	jmp .fail
 
 .not_protected_by_item
 	ld a, BATTLE_VARS_STATUS_OPP
 	call GetBattleVarAddr
 	ld d, h
 	ld e, l
 	ld a, [de]
 	and SLP_MASK
 	ld hl, AlreadyAsleepText
-	jr nz, .fail
+	jmp nz, .fail
 
 	ld a, [wAttackMissed]
 	and a
 	jmp nz, BattleEffect_DidntAffectProtect
 
 	ld hl, DidntAffectText
 	call .CheckAIRandomFail
-	jr c, .fail
+	jmp c, .fail
 
 	ld a, [de]
 	and a
-	jr nz, .fail
+	jmp nz, .fail
 
         call CheckSubstituteOpp
-        jr nz, .fail
+	jr nz, .fail
 
-	ldh a, [hBattleTurn]
+        farcall Terrain_TryBlockTargetMistyStatus
+        and a
+        jr nz, .check_electric_terrain
+        ld a, 1
+        ld [wAttackMissed], a
+        jmp EndMoveEffect
+
+.check_electric_terrain
+        farcall Terrain_TryBlockTargetElectricSleep
+        and a
+        jr nz, .no_terrain_block
+        ld a, 1
+        ld [wAttackMissed], a
+        jmp EndMoveEffect
+
+.no_terrain_block
+        ldh a, [hBattleTurn]
         and a
         jr nz, .sleep_target_player
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
         jr .check_sleep_ability
 .sleep_target_player
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
 .check_sleep_ability
         farcall Check_InsomniaVitalSpirit
         and a
         jr nz, .no_sleep_block
         ld hl, AbilityText_StayedAwake
         call StdAbilityTextbox
         ld a, 1
         ld [wAttackMissed], a
         jmp EndMoveEffect
 .no_sleep_block
 
         call AnimateCurrentMove
         ld b, SLP_MASK
@@ -4481,51 +4503,54 @@ BattleCommand_SleepTarget:
 	ret
 
 BattleCommand_PoisonTarget:
 	call CheckSubstituteOpp
 	ret nz
 	ld a, BATTLE_VARS_STATUS_OPP
 	call GetBattleVarAddr
 	and a
 	ret nz
 	ld a, [wTypeModifier]
 	and EFFECTIVENESS_MASK
 	ret z
 	ld c, POISON
 	call CheckIfTargetMatchesType ; Don't freeze an Ice-type
 	ret z
         call GetOpponentItem
         ld a, b
         cp HELD_PREVENT_POISON
         ret z
         ld a, [wEffectFailed]
         and a
         ret nz
         call SafeCheckSafeguard
         ret nz
 
-	ldh a, [hBattleTurn]
+        farcall Terrain_TryBlockTargetMistyStatus
+        ret z
+
+        ldh a, [hBattleTurn]
         and a
         jr nz, .poison_target_player
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
         jr .check_immunity
 .poison_target_player
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
 .check_immunity
         farcall Check_Immunity
         and a
         jr nz, .no_immunity_block
         ld hl, AbilityText_Immunity
         call StdAbilityTextbox
         ret
 .no_immunity_block
 
         call PoisonOpponent
         ld de, ANIM_PSN
 	call PlayOpponentBattleAnim
 	call RefreshBattleHuds
@@ -4571,62 +4596,70 @@ BattleCommand_Poison:
 	jmp .failed
 
 .do_poison
 	ld hl, DidntAffectText
 	ld a, BATTLE_VARS_STATUS_OPP
 	call GetBattleVar
 	and a
 	jmp nz, .failed
 
 	ldh a, [hBattleTurn]
 	and a
 	jr z, .dont_sample_failure
 
 	ld a, [wLinkMode]
 	and a
 	jr nz, .dont_sample_failure
 
 	ld a, [wInBattleTowerBattle]
 	and a
 	jr nz, .dont_sample_failure
 
 	ld a, [wPlayerSubStatus5]
 	bit SUBSTATUS_LOCK_ON, a
 	jr nz, .dont_sample_failure
 
-	call BattleRandom
-	cp 25 percent + 1 ; 25% chance AI fails
-	jr c, .failed
+call BattleRandom
+cp 25 percent + 1 ; 25% chance AI fails
+jr c, .failed
 
 .dont_sample_failure
         call CheckSubstituteOpp
-        jr nz, .failed
-        ld a, [wAttackMissed]
+	jr nz, .failed
+ld a, [wAttackMissed]
+and a
+jr nz, .failed
+
+        farcall Terrain_TryBlockTargetMistyStatus
         and a
-        jr nz, .failed
+        jr nz, .terrain_poison_ok
+        ld a, 1
+        ld [wAttackMissed], a
+        jmp EndMoveEffect
 
-	ldh a, [hBattleTurn]
+.terrain_poison_ok
+        ldh a, [hBattleTurn]
         and a
         jr nz, .poison_move_target_player
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
         jr .check_immunity
 .poison_move_target_player
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
 .check_immunity
         farcall Check_Immunity
         and a
         jr nz, .no_immunity_block
         ld hl, AbilityText_Immunity
         call StdAbilityTextbox
         ld a, 1
         ld [wAttackMissed], a
         jmp EndMoveEffect
 .no_immunity_block
         call .check_toxic
         jr z, .toxic
 
@@ -4824,57 +4857,60 @@ SapHealth:
 	ld [wWhichHPBar], a
 	predef AnimateHPBar
 	call RefreshBattleHuds
 	call UpdateUserInParty
 	ret
 
 BattleCommand_BurnTarget:
 	call CheckSubstituteOpp
 	ret nz
 	ld a, BATTLE_VARS_STATUS_OPP
 	call GetBattleVarAddr
 	and a
 	jmp nz, Defrost
 	ld a, [wTypeModifier]
 	and EFFECTIVENESS_MASK
 	ret z
 	ld c, FIRE
 	call CheckIfTargetMatchesType ; Don't burn a Fire-type
 	jr z, .FlashFireStatusOnly
 	call .TryFlashFireStatus
 	ret z
 	call GetOpponentItem
 	ld a, b
 	cp HELD_PREVENT_BURN
 	ret z
-	ld a, [wEffectFailed]
-	and a
-	ret nz
+        ld a, [wEffectFailed]
+        and a
+        ret nz
         call SafeCheckSafeguard
         ret nz
 
-	ldh a, [hBattleTurn]
+        farcall Terrain_TryBlockTargetMistyStatus
+        ret z
+
+        ldh a, [hBattleTurn]
         and a
         jr nz, .burn_target_player
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
         jr .check_water_veil
 .burn_target_player
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
 .check_water_veil
         farcall Check_WaterVeil
         and a
         jr nz, .no_water_veil_block
         ld hl, AbilityText_WaterVeil
         call StdAbilityTextbox
         ret
 
 .no_water_veil_block
         ld a, BATTLE_VARS_STATUS_OPP
         call GetBattleVarAddr
         set BRN, [hl]
         call UpdateOpponentInParty
@@ -4940,51 +4976,54 @@ BattleCommand_FreezeTarget:
 	call CheckSubstituteOpp
 	ret nz
 	ld a, BATTLE_VARS_STATUS_OPP
 	call GetBattleVarAddr
 	and a
 	ret nz
 	ld a, [wTypeModifier]
 	and EFFECTIVENESS_MASK
 	ret z
 	farcall Ability_GetBattleWeather
 	cp WEATHER_SUN
 	ret z
 	ld c, ICE
 	call CheckIfTargetMatchesType ; Don't freeze an Ice-type
 	ret z
 	call GetOpponentItem
 	ld a, b
 	cp HELD_PREVENT_FREEZE
 	ret z
         ld a, [wEffectFailed]
         and a
         ret nz
         call SafeCheckSafeguard
         ret nz
 
-	ldh a, [hBattleTurn]
+        farcall Terrain_TryBlockTargetMistyStatus
+        ret z
+
+        ldh a, [hBattleTurn]
         and a
         jr nz, .freeze_target_player
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
         jr .check_magma_armor
 .freeze_target_player
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
 .check_magma_armor
         farcall Check_MagmaArmor
         and a
         jr nz, .no_magma_armor_block
         ld hl, AbilityText_MagmaArmor
         call StdAbilityTextbox
         ret
 
 .no_magma_armor_block
         ld a, BATTLE_VARS_STATUS_OPP
         call GetBattleVarAddr
         set FRZ, [hl]
         call UpdateOpponentInParty
@@ -5010,51 +5049,54 @@ BattleCommand_FreezeTarget:
 	ld [hl], $1
 	ret
 
 BattleCommand_ParalyzeTarget:
         call CheckSubstituteOpp
         ret nz
 	call .TryLightningrodStatus
         ret z
         ld a, BATTLE_VARS_STATUS_OPP
         call GetBattleVarAddr
 	and a
 	ret nz
 	ld a, [wTypeModifier]
 	and EFFECTIVENESS_MASK
 	ret z
 	call GetOpponentItem
 	ld a, b
 	cp HELD_PREVENT_PARALYZE
 	ret z
         ld a, [wEffectFailed]
         and a
         ret nz
         call SafeCheckSafeguard
         ret nz
 
-	ldh a, [hBattleTurn]
+        farcall Terrain_TryBlockTargetMistyStatus
+        ret z
+
+        ldh a, [hBattleTurn]
         and a
         jr nz, .paralyze_target_player
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
         jr .check_limber
 .paralyze_target_player
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
 .check_limber
         farcall Check_Limber
         and a
         jr nz, .no_limber_block
         ld hl, AbilityText_Limber
         call StdAbilityTextbox
         ret
 
 .no_limber_block
         ld a, BATTLE_VARS_STATUS_OPP
         call GetBattleVarAddr
         set PAR, [hl]
         call UpdateOpponentInParty
@@ -6848,81 +6890,87 @@ BattleCommand_Charge:
 
 .BattleFlewText:
 	text_far _BattleFlewText
 	text_end
 
 .BattleDugText:
 	text_far _BattleDugText
 	text_end
 
 INCLUDE "engine/battle/move_effects/mist.asm"
 
 INCLUDE "engine/battle/move_effects/focus_energy.asm"
 
 BattleCommand_ConfuseTarget:
 	call GetOpponentItem
 	ld a, b
 	cp HELD_PREVENT_CONFUSE
 	ret z
 	ld a, [wEffectFailed]
 	and a
 	ret nz
 	call SafeCheckSafeguard
 	ret nz
 	call CheckSubstituteOpp
 	ret nz
+	farcall Terrain_TryBlockTargetMistyStatus
+	ret z
 	ld a, BATTLE_VARS_SUBSTATUS3_OPP
 	call GetBattleVarAddr
 	bit SUBSTATUS_CONFUSED, [hl]
 	ret nz
 	jr BattleCommand_FinishConfusingTarget
 
 BattleCommand_Confuse:
 	call GetOpponentItem
 	ld a, b
 	cp HELD_PREVENT_CONFUSE
 	jr nz, .no_item_protection
 	ld a, [hl]
 	ld [wNamedObjectIndex], a
 	call GetItemName
 	ld hl, ProtectedByText
 	jmp AnimateFailedMoveText
 
 .no_item_protection
 	ld a, BATTLE_VARS_SUBSTATUS3_OPP
 	call GetBattleVarAddr
 	bit SUBSTATUS_CONFUSED, [hl]
 	jr z, .not_already_confused
 	ld hl, AlreadyConfusedText
 	jmp AnimateFailedMoveText
 
 .not_already_confused
 	call CheckSubstituteOpp
 	jr nz, BattleCommand_Confuse_CheckSnore_Swagger_ConfuseHit
 	ld a, [wAttackMissed]
 	and a
 	jr nz, BattleCommand_Confuse_CheckSnore_Swagger_ConfuseHit
+	farcall Terrain_TryBlockTargetMistyStatus
+	and a
+	jr nz, BattleCommand_FinishConfusingTarget
+	jr BattleCommand_Confuse_CheckSnore_Swagger_ConfuseHit
 BattleCommand_FinishConfusingTarget:
         push hl
 	ldh a, [hBattleTurn]
         and a
         jr z, .target_enemy
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
         jr .check_own_tempo
 .target_enemy
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
 .check_own_tempo
         farcall Check_OwnTempo
         and a
         jr nz, .no_own_tempo_block
         ld hl, AbilityText_OwnTempo
         call StdAbilityTextbox
         pop hl
         ret
 .no_own_tempo_block
         pop hl
@@ -6992,64 +7040,72 @@ BattleCommand_Paralyze:
 	ld a, [hl]
 	ld [wNamedObjectIndex], a
 	call GetItemName
 	ld hl, ProtectedByText
 	jmp AnimateFailedMoveText
 
 .no_item_protection
 	ldh a, [hBattleTurn]
 	and a
 	jr z, .dont_sample_failure
 
 	ld a, [wLinkMode]
 	and a
 	jr nz, .dont_sample_failure
 
 	ld a, [wInBattleTowerBattle]
 	and a
 	jr nz, .dont_sample_failure
 
 	ld a, [wPlayerSubStatus5]
 	bit SUBSTATUS_LOCK_ON, a
 	jr nz, .dont_sample_failure
 
 	call BattleRandom
 	cp 25 percent + 1 ; 25% chance AI fails
-	jr c, .failed
+	jmp c, .failed
 
 .dont_sample_failure
 	ld a, BATTLE_VARS_STATUS_OPP
 	call GetBattleVarAddr
 	and a
-	jr nz, .failed
+	jmp nz, .failed
         ld a, [wAttackMissed]
         and a
-        jr nz, .failed
+	jmp nz, .failed
         call CheckSubstituteOpp
-        jr nz, .failed
+	jr nz, .failed
 
-	ldh a, [hBattleTurn]
+        farcall Terrain_TryBlockTargetMistyStatus
+        and a
+        jr nz, .terrain_paralyze_ok
+        ld a, 1
+        ld [wAttackMissed], a
+        jmp EndMoveEffect
+
+.terrain_paralyze_ok
+        ldh a, [hBattleTurn]
         and a
         jr nz, .paralyze_player
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
         jr .check_limber
 .paralyze_player
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
 .check_limber
         farcall Check_Limber
         and a
         jr nz, .no_limber_block
         ld hl, AbilityText_Limber
         call StdAbilityTextbox
         ld a, 1
         ld [wAttackMissed], a
         jmp EndMoveEffect
 
 .no_limber_block
         ld c, 30
         call DelayFrames
@@ -7181,55 +7237,66 @@ BattleCommand_Heal:
         push hl
         push de
 	push af
 
 	ldh a, [hBattleTurn]
         and a
         jr nz, .rest_enemy
         ld a, [wBattleMonSpecies]
         ld c, a
         ld hl, wBattleMonPersonality
         ld b, 0
         jr .check_rest_ability
 .rest_enemy
         ld a, [wEnemyMonSpecies]
         ld c, a
         ld hl, wEnemyMonPersonality
         ld b, 1
 .check_rest_ability
         farcall Check_InsomniaVitalSpirit
         and a
         jr nz, .rest_sleep_ok
         ld hl, AbilityText_StayedAwake
         call StdAbilityTextbox
         ld a, 1
         ld [wAttackMissed], a
-	pop af
+        pop af
         pop de
         pop hl
         jmp EndMoveEffect
 .rest_sleep_ok
+        farcall Terrain_TryBlockUserElectricSleep
+        and a
+        jr nz, .rest_terrain_ok
+        ld a, 1
+        ld [wAttackMissed], a
+        pop af
+        pop de
+        pop hl
+        jmp EndMoveEffect
+
+.rest_terrain_ok
         call BattleCommand_MoveDelay
         ld a, BATTLE_VARS_SUBSTATUS5
         call GetBattleVarAddr
         res SUBSTATUS_TOXIC, [hl]
 	ld a, BATTLE_VARS_STATUS
 	call GetBattleVarAddr
 	ld a, [hl]
 	and a
 	ld [hl], REST_SLEEP_TURNS + 1
 	ld hl, WentToSleepText
 	jr z, .no_status_to_heal
 	ld hl, RestedText
 .no_status_to_heal
 	call StdBattleTextbox
 	ldh a, [hBattleTurn]
 	and a
 	jr nz, .calc_enemy_stats
 	call CalcPlayerStats
 	jr .got_stats
 
 .calc_enemy_stats
 	call CalcEnemyStats
 .got_stats
 	pop af
 	pop de
@@ -7411,50 +7478,54 @@ BattleCommand_Defrost:
 
 ; Don't update the enemy's party struct in a wild battle.
 
 	ldh a, [hBattleTurn]
 	and a
 	jr z, .party
 
 	ld a, [wBattleMode]
 	dec a
 	jr z, .done
 
 .party
 	ld a, MON_STATUS
 	call UserPartyAttr
 	res FRZ, [hl]
 
 .done
 	call RefreshBattleHuds
 	ld hl, WasDefrostedText
 	jmp StdBattleTextbox
 
 INCLUDE "engine/battle/move_effects/curse.asm"
 
 INCLUDE "engine/battle/move_effects/foresight.asm"
 
+INCLUDE "engine/battle/move_effects/rain_dance.asm"
+
+INCLUDE "engine/battle/move_effects/sunny_day.asm"
+
 INCLUDE "engine/battle/move_effects/sandstorm.asm"
 
 INCLUDE "engine/battle/move_effects/rollout.asm"
 
 INCLUDE "engine/battle/move_effects/fury_cutter.asm"
 
 INCLUDE "engine/battle/move_effects/attract.asm"
 
 INCLUDE "engine/battle/move_effects/present.asm"
 
 INCLUDE "engine/battle/move_effects/safeguard.asm"
 
 SafeCheckSafeguard:
 	push hl
 	ld hl, wEnemyScreens
 	ldh a, [hBattleTurn]
 	and a
 	jr z, .got_turn
 	ld hl, wPlayerScreens
 
 .got_turn
 	bit SCREENS_SAFEGUARD, [hl]
 	pop hl
 	ret
 
@@ -7545,63 +7616,52 @@ BattleCommand_TimeBasedHealContinue:
 	call FarCall_hl
 
 	call AnimateCurrentMove
 	call BattleCommand_SwitchTurn
 
 	farcall RestoreHP
 
 	call BattleCommand_SwitchTurn
 	call UpdateUserInParty
 
 ; 'regained health!'
 	ld hl, RegainedHealthText
 	jmp StdBattleTextbox
 
 .Full:
 	; 'hp is full!'
 	ld hl, HPIsFullText
 	jmp AnimateFailedMoveText
 
 .Multipliers:
 	dw GetEighthMaxHP
 	dw GetQuarterMaxHP
 	dw GetHalfMaxHP
 	dw GetMaxHP
 
-INCLUDE "engine/battle/move_effects/hidden_power.asm"
-
-INCLUDE "engine/battle/move_effects/rain_dance.asm"
-
-INCLUDE "engine/battle/move_effects/sunny_day.asm"
-
-INCLUDE "engine/battle/move_effects/belly_drum.asm"
-
-INCLUDE "engine/battle/move_effects/psych_up.asm"
 
-INCLUDE "engine/battle/move_effects/future_sight.asm"
 
-INCLUDE "engine/battle/move_effects/hail.asm"
 
 CheckHiddenOpponent:
 	ld a, BATTLE_VARS_SUBSTATUS5_OPP
 	call GetBattleVar
 	cpl
 	and 1 << SUBSTATUS_LOCK_ON
 	ret z
 
 	ld a, BATTLE_VARS_SUBSTATUS3_OPP
 	call GetBattleVar
 	and 1 << SUBSTATUS_FLYING | 1 << SUBSTATUS_UNDERGROUND
 	ret
 
 CheckProtectedOpponent:
 	ld a, BATTLE_VARS_SUBSTATUS1_OPP
 	call GetBattleVar
 	bit SUBSTATUS_PROTECT, a
 	ret
 
 GetUserItem:
 ; Return the effect of the user's item in bc, and its id at hl.
 	ld hl, wBattleMonItem
 	ldh a, [hBattleTurn]
 	and a
 	jr z, .go
