--- home/pokemon.asm
+++ home/pokemon.asm
@@ -224,73 +224,90 @@ Print8BitNumLeftAlign::
 	ld [wTextDecimalByte], a
 	ld de, wTextDecimalByte
 	ld b, PRINTNUM_LEFTALIGN | 1
 	jmp PrintNum
 
 GetBaseData::
 	push hl
 	push de
 	push bc
 	ldh a, [hROMBank]
 	push af
 
 ; Egg doesn't have BaseData
 	ld a, [wCurSpecies]
 	cp EGG
 	jr z, .egg
 
 ; Get BaseData
 	call GetPokemonIndexFromID
 	ld b, h
 	ld c, l
 	ld a, BANK(BaseData)
 	ld hl, BaseData
 	call LoadIndirectPointer
 	; jr z, <some error handler>
-	rst Bankswitch
-	ld de, wCurBaseData
-	ld bc, BASE_DATA_SIZE
-	rst CopyBytes
-	jr .end
+        rst Bankswitch
+        ld de, wCurBaseData
+        ld bc, BASE_DATA_SIZE
+        rst CopyBytes
+
+        ; load 16-bit base experience
+        ld a, [wCurSpecies]
+        call GetPokemonIndexFromID
+        ld b, h
+        ld c, l
+        ld hl, BaseExpTable
+        ld a, BANK(BaseExpTable)
+        call GetFarWord
+        ld a, l
+        ld [wBaseExp], a
+        ld a, h
+        ld [wBaseExp + 1], a
+        jr .end
 
 .egg
 
 ; Sprite dimensions
 	ld b, $55 ; 5x5
 	ld hl, wBasePicSize
 	ld [hl], b
 
 ; Ability (which was formerly the unused frontpic)
 ; I don't want to screw with this at the moment because it will break something else
 	ld hl, wBaseAbility1
-	ld a, e
-	ld [hli], a
-	ld a, d
-	ld [hli], a
-	ld a, e
-	ld [hli], a
-	ld [hl], d
+        ld a, e
+        ld [hli], a
+        ld a, d
+        ld [hli], a
+        ld a, e
+        ld [hli], a
+        ld [hl], d
+
+        xor a
+        ld [wBaseExp], a
+        ld [wBaseExp + 1], a
 
 .end
 ; Replace Pokedex # with species
 	ld a, [wCurSpecies]
 	ld [wBaseSpecies], a
 
 	pop af
 	rst Bankswitch
 	jmp PopBCDEHL
 
 GetLeadAbility::
 ; Returns ability of lead mon unless it's an Egg. Used for field
 ; abilities
 	ld a, [wPartyMon1Species]
 	call IsAPokemon
 	jr nc, .valid_mon
 	xor a
 	ret
 
 .valid_mon
 	push hl
 	ld hl, wPartyMon1Personality
 	ld c, a
 	call GetAbility
 	pop hl
