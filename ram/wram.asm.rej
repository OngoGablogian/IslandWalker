--- ram/wram.asm
+++ ram/wram.asm
@@ -566,51 +566,51 @@ wFailedMessage:: db
 wEnemyGoesFirst:: db
 
 wPlayerIsSwitching:: db
 wEnemyIsSwitching::  db
 
 wPlayerUsedMoves::
 ; add a move that has been used once by the player
 ; added in order of use
 	ds NUM_MOVES
 
 wEnemyAISwitchScore:: db
 wEnemySwitchMonParam:: db
 wEnemySwitchMonIndex:: db
 wTempLevel:: db
 wLastPlayerMon:: db
 wLastPlayerMove:: db
 wLastEnemyMove:: db
 
 wPlayerFutureSightCount:: db
 wEnemyFutureSightCount:: db
 
 wGivingExperienceToExpShareHolders:: db
 
 wBackupEnemyMonBaseStats:: ds NUM_EXP_STATS
 wBackupEnemyMonCatchRate:: db
-wBackupEnemyMonBaseExp:: db
+wBackupEnemyMonBaseExp:: dw
 
 wPlayerFutureSightDamage:: dw
 wEnemyFutureSightDamage:: dw
 wPlayerRageCounter:: db
 wEnemyRageCounter:: db
 
 wBeatUpHitAtLeastOnce:: db
 
 wPlayerTrappingMove:: db
 wEnemyTrappingMove:: db
 wPlayerWrapCount:: db
 wEnemyWrapCount:: db
 wPlayerCharging:: db
 wEnemyCharging:: db
 
 wBattleEnded:: db
 
 wWildMonMoves:: ds NUM_MOVES
 wWildMonPP:: ds NUM_MOVES
 
 wAmuletCoin:: db
 
 wSomeoneIsRampaging:: db
 
 wPlayerJustGotFrozen:: db
@@ -2404,115 +2404,117 @@ wPokerusBuffer::
 wCurEnemyItem:: db
 
 NEXTU
 ; miscellaneous words
 wBuySellItemPrice::
 wTempMysteryGiftTimer::
 wMagikarpLength:: dw
 
 NEXTU
 ; 16-bit wram
 	ds 13
 wOtherTrainerType:: db
 wTrainerGroupBank:: db
 
 ENDU
 
 wTempEnemyMonSpecies::  db
 wTempBattleMonSpecies:: db
 
 UNION
 wOTLinkBattleRNData:: ds SERIAL_RN_PREAMBLE_LENGTH + SERIAL_RNS_LENGTH
 NEXTU
 wEnemyMon:: battle_struct wEnemyMon
 wEnemyMonBaseStats:: ds NUM_EXP_STATS
 wEnemyMonCatchRate:: db
-wEnemyMonBaseExp::   db
+wEnemyMonBaseExp::   dw
 wEnemyMonEnd::
 ENDU
 
 wBattleMode::
 ; 0: overworld
 ; 1: wild battle
 ; 2: trainer battle
 	db
 
 wTempWildMonSpecies:: db
 
 wOtherTrainerClass::
 ; class (Youngster, Bug Catcher, etc.) of opposing trainer
 ; 0 if opponent is a wild Pok√©mon, not a trainer
 	db
 
 ; BATTLETYPE_* values
 wBattleType:: db
 
 wOtherTrainerID::
 ; which trainer of the class that you're fighting
 ; (Joey, Mikey, Albert, etc.)
 	db
 
 wForcedSwitch:: db
 
 wTrainerClass:: db
 
 wUnownLetter:: db
 
 wMoveSelectionMenuType:: db
 
 ; corresponds to the data/pokemon/base_stats/*/*.asm contents
 wCurBaseData::
 wBaseSpecies:: db
 wBaseStats::
 wBaseHP:: db
 wBaseAttack:: db
 wBaseDefense:: db
 wBaseSpeed:: db
 wBaseSpecialAttack:: db
 wBaseSpecialDefense:: db
 wBaseEVs::
 wBaseHPAtkDefSpdEVs:: db
 wBaseSpAtkSpDefEVs:: db
 wBaseType::
 wBaseType1:: db
 wBaseType2:: db
 wBaseCatchRate:: db
-wBaseExp:: db
+wBaseExpByte:: db
 wBaseItems::
 wBaseItem1:: dw
 wBaseItem2:: dw
 wBaseGender:: db
 wBaseEggSteps:: db
 wBasePicSize:: db
 wBaseAbility1:: db
 wBaseAbility2:: db
 wBasePadding:: dw
 wBaseGrowthRate:: db
 wBaseEggGroups:: db
 wBaseTMHM:: flag_array NUM_TM_HM_TUTOR
 wCurBaseDataEnd::
-	assert wCurBaseDataEnd - wCurBaseData == BASE_DATA_SIZE
+        assert wCurBaseDataEnd - wCurBaseData == BASE_DATA_SIZE
+
+wBaseExp:: dw
 
 wCurDamage:: dw
 
 wTilesetDataAddress:: dw
 
 wMornEncounterRate::  db
 wDayEncounterRate::   db
 wNiteEncounterRate::  db
 wEveEncounterRate::   db
 wWaterEncounterRate:: db
 wListMoves_MoveIndicesBuffer:: ds NUM_MOVES
 wPutativeTMHMMove:: db
 wInitListType:: db
 ds 1
 
 wNamedObjectIndex::
 wTextDecimalByte::
 wTempByteValue::
 wNumSetBits::
 wTypeMatchup::
 wCurType::
 wTempSpecies::
 wTempIconSpecies::
 wTempTMHM::
 wTempPP::
